// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: api/TopService.proto

package TopService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Необходимо каждые **N** секунд выдавать информацию, усредненную за последние **M** секунд.
type SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotPeriod uint32 `protobuf:"varint,1,opt,name=SnapshotPeriod,proto3" json:"SnapshotPeriod,omitempty"`
	WarmingUpTime  uint32 `protobuf:"varint,2,opt,name=WarmingUpTime,proto3" json:"WarmingUpTime,omitempty"`
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{0}
}

func (x *SnapshotRequest) GetSnapshotPeriod() uint32 {
	if x != nil {
		return x.SnapshotPeriod
	}
	return 0
}

func (x *SnapshotRequest) GetWarmingUpTime() uint32 {
	if x != nil {
		return x.WarmingUpTime
	}
	return 0
}

type Snapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu                  *Cpu                   `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	DisksIO              []*DiskIO              `protobuf:"bytes,2,rep,name=disksIO,proto3" json:"disksIO,omitempty"`
	DisksInfo            []*DiskInfo            `protobuf:"bytes,3,rep,name=disksInfo,proto3" json:"disksInfo,omitempty"`
	TopTalkersByProtocol []*TopTalkerByProtocol `protobuf:"bytes,4,rep,name=topTalkersByProtocol,proto3" json:"topTalkersByProtocol,omitempty"`
	TopTalkersByTraffic  []*TopTalkerByTraffic  `protobuf:"bytes,5,rep,name=topTalkersByTraffic,proto3" json:"topTalkersByTraffic,omitempty"`
	ConnectsInfo         []*ConnectInfo         `protobuf:"bytes,6,rep,name=connectsInfo,proto3" json:"connectsInfo,omitempty"`
	ConnectsStates       []*ConnectState        `protobuf:"bytes,7,rep,name=connectsStates,proto3" json:"connectsStates,omitempty"`
}

func (x *Snapshot) Reset() {
	*x = Snapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snapshot) ProtoMessage() {}

func (x *Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snapshot.ProtoReflect.Descriptor instead.
func (*Snapshot) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{1}
}

func (x *Snapshot) GetCpu() *Cpu {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *Snapshot) GetDisksIO() []*DiskIO {
	if x != nil {
		return x.DisksIO
	}
	return nil
}

func (x *Snapshot) GetDisksInfo() []*DiskInfo {
	if x != nil {
		return x.DisksInfo
	}
	return nil
}

func (x *Snapshot) GetTopTalkersByProtocol() []*TopTalkerByProtocol {
	if x != nil {
		return x.TopTalkersByProtocol
	}
	return nil
}

func (x *Snapshot) GetTopTalkersByTraffic() []*TopTalkerByTraffic {
	if x != nil {
		return x.TopTalkersByTraffic
	}
	return nil
}

func (x *Snapshot) GetConnectsInfo() []*ConnectInfo {
	if x != nil {
		return x.ConnectsInfo
	}
	return nil
}

func (x *Snapshot) GetConnectsStates() []*ConnectState {
	if x != nil {
		return x.ConnectsStates
	}
	return nil
}

type Cpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avg   *CpuAvg   `protobuf:"bytes,1,opt,name=avg,proto3" json:"avg,omitempty"`
	State *CpuState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Cpu) Reset() {
	*x = Cpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cpu) ProtoMessage() {}

func (x *Cpu) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cpu.ProtoReflect.Descriptor instead.
func (*Cpu) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{2}
}

func (x *Cpu) GetAvg() *CpuAvg {
	if x != nil {
		return x.Avg
	}
	return nil
}

func (x *Cpu) GetState() *CpuState {
	if x != nil {
		return x.State
	}
	return nil
}

type CpuState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   float32 `protobuf:"fixed32,1,opt,name=user,proto3" json:"user,omitempty"`     // 1.5
	System float32 `protobuf:"fixed32,2,opt,name=system,proto3" json:"system,omitempty"` // 1.1
	Idle   float32 `protobuf:"fixed32,3,opt,name=idle,proto3" json:"idle,omitempty"`     // 96.9
}

func (x *CpuState) Reset() {
	*x = CpuState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuState) ProtoMessage() {}

func (x *CpuState) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuState.ProtoReflect.Descriptor instead.
func (*CpuState) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{3}
}

func (x *CpuState) GetUser() float32 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *CpuState) GetSystem() float32 {
	if x != nil {
		return x.System
	}
	return 0
}

func (x *CpuState) GetIdle() float32 {
	if x != nil {
		return x.Idle
	}
	return 0
}

type CpuAvg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min     float32 `protobuf:"fixed32,1,opt,name=min,proto3" json:"min,omitempty"`         // The first value depicts the average load on the CPU for the last minute.
	Five    float32 `protobuf:"fixed32,2,opt,name=five,proto3" json:"five,omitempty"`       // The second gives us the average load for the last 5-minute interval
	Fifteen float32 `protobuf:"fixed32,3,opt,name=fifteen,proto3" json:"fifteen,omitempty"` // The third value gives us the 15-minute average load
}

func (x *CpuAvg) Reset() {
	*x = CpuAvg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuAvg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuAvg) ProtoMessage() {}

func (x *CpuAvg) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuAvg.ProtoReflect.Descriptor instead.
func (*CpuAvg) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{4}
}

func (x *CpuAvg) GetMin() float32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *CpuAvg) GetFive() float32 {
	if x != nil {
		return x.Five
	}
	return 0
}

func (x *CpuAvg) GetFifteen() float32 {
	if x != nil {
		return x.Fifteen
	}
	return 0
}

type DiskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                        // /dev/nvme0n1p3     df -k
	UsedBytes       int32  `protobuf:"varint,2,opt,name=usedBytes,proto3" json:"usedBytes,omitempty"`             // 39131452
	AvailableBytes  int32  `protobuf:"varint,3,opt,name=availableBytes,proto3" json:"availableBytes,omitempty"`   // 64169664
	UsageBytes      int32  `protobuf:"varint,4,opt,name=usageBytes,proto3" json:"usageBytes,omitempty"`           // 38%
	UsedInodes      int32  `protobuf:"varint,5,opt,name=usedInodes,proto3" json:"usedInodes,omitempty"`           // 272911         df -i
	AvailableInodes int32  `protobuf:"varint,6,opt,name=availableInodes,proto3" json:"availableInodes,omitempty"` // 64224433
	UsageInodes     int32  `protobuf:"varint,7,opt,name=usageInodes,proto3" json:"usageInodes,omitempty"`         // 1 %
}

func (x *DiskInfo) Reset() {
	*x = DiskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskInfo) ProtoMessage() {}

func (x *DiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskInfo.ProtoReflect.Descriptor instead.
func (*DiskInfo) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{5}
}

func (x *DiskInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiskInfo) GetUsedBytes() int32 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *DiskInfo) GetAvailableBytes() int32 {
	if x != nil {
		return x.AvailableBytes
	}
	return 0
}

func (x *DiskInfo) GetUsageBytes() int32 {
	if x != nil {
		return x.UsageBytes
	}
	return 0
}

func (x *DiskInfo) GetUsedInodes() int32 {
	if x != nil {
		return x.UsedInodes
	}
	return 0
}

func (x *DiskInfo) GetAvailableInodes() int32 {
	if x != nil {
		return x.AvailableInodes
	}
	return 0
}

func (x *DiskInfo) GetUsageInodes() int32 {
	if x != nil {
		return x.UsageInodes
	}
	return 0
}

type DiskIO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device string  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"` // nvme0n1
	Tps    float32 `protobuf:"fixed32,2,opt,name=tps,proto3" json:"tps,omitempty"`     // 52.86
	Kbps   float32 `protobuf:"fixed32,3,opt,name=kbps,proto3" json:"kbps,omitempty"`   //  665.63 + 780.25
}

func (x *DiskIO) Reset() {
	*x = DiskIO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskIO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskIO) ProtoMessage() {}

func (x *DiskIO) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskIO.ProtoReflect.Descriptor instead.
func (*DiskIO) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{6}
}

func (x *DiskIO) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskIO) GetTps() float32 {
	if x != nil {
		return x.Tps
	}
	return 0
}

func (x *DiskIO) GetKbps() float32 {
	if x != nil {
		return x.Kbps
	}
	return 0
}

type TopTalkerByProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"` // UDP
	Bytes    int32  `protobuf:"varint,2,opt,name=bytes,proto3" json:"bytes,omitempty"`      // 127
	Percent  string `protobuf:"bytes,3,opt,name=percent,proto3" json:"percent,omitempty"`   // 32%
}

func (x *TopTalkerByProtocol) Reset() {
	*x = TopTalkerByProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopTalkerByProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopTalkerByProtocol) ProtoMessage() {}

func (x *TopTalkerByProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopTalkerByProtocol.ProtoReflect.Descriptor instead.
func (*TopTalkerByProtocol) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{7}
}

func (x *TopTalkerByProtocol) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *TopTalkerByProtocol) GetBytes() int32 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *TopTalkerByProtocol) GetPercent() string {
	if x != nil {
		return x.Percent
	}
	return ""
}

// по трафику: source ip:port, destination ip:port, protocol, bytes per second (bps), сортируем по убыванию bps.
type TopTalkerByTraffic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source         string  `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`                   // 172.21.0.1.52978
	Destination    string  `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`         // 239.255.255.250.1900
	Protocol       string  `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`               // udp
	BytesPerSecond float32 `protobuf:"fixed32,4,opt,name=bytesPerSecond,proto3" json:"bytesPerSecond,omitempty"` // 173 ?
}

func (x *TopTalkerByTraffic) Reset() {
	*x = TopTalkerByTraffic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopTalkerByTraffic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopTalkerByTraffic) ProtoMessage() {}

func (x *TopTalkerByTraffic) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopTalkerByTraffic.ProtoReflect.Descriptor instead.
func (*TopTalkerByTraffic) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{8}
}

func (x *TopTalkerByTraffic) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *TopTalkerByTraffic) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *TopTalkerByTraffic) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *TopTalkerByTraffic) GetBytesPerSecond() float32 {
	if x != nil {
		return x.BytesPerSecond
	}
	return 0
}

// root@9202f26c9a6e:/# netstat -lntup
// Active Internet connections (only servers)
// Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
// tcp        0      0 127.0.0.11:40349        0.0.0.0:*               LISTEN      -
// udp        0      0 127.0.0.11:34158        0.0.0.0:*                           -
type ConnectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command  string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`   // -
	Pid      int32  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`          // -
	User     string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`         // ?
	Protocol string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"` // TCP
	Port     int32  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`        // 40349
}

func (x *ConnectInfo) Reset() {
	*x = ConnectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectInfo) ProtoMessage() {}

func (x *ConnectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectInfo.ProtoReflect.Descriptor instead.
func (*ConnectInfo) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{9}
}

func (x *ConnectInfo) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ConnectInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ConnectInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ConnectInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ConnectInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// количество TCP соединений, находящихся в разных состояниях (ESTAB, FIN_WAIT, SYN_RCV и пр.).
// root@9202f26c9a6e:/# ss -ta
// State                               Recv-Q                                Send-Q                                                                Local Address:Port                                                                Peer Address:Port
// LISTEN                              0                                     4096                                                                     127.0.0.11:40349                                                                    0.0.0.0:*
// root@9202f26c9a6e:/# ss -ua
// State                               Recv-Q                                Send-Q                                                                Local Address:Port                                                                Peer Address:Port
// UNCONN                              0                                     0                                                                        127.0.0.11:34158                                                                    0.0.0.0:*
type ConnectState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"` // tcp
	State    string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`       // listen
}

func (x *ConnectState) Reset() {
	*x = ConnectState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_TopService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectState) ProtoMessage() {}

func (x *ConnectState) ProtoReflect() protoreflect.Message {
	mi := &file_api_TopService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectState.ProtoReflect.Descriptor instead.
func (*ConnectState) Descriptor() ([]byte, []int) {
	return file_api_TopService_proto_rawDescGZIP(), []int{10}
}

func (x *ConnectState) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ConnectState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

var File_api_TopService_proto protoreflect.FileDescriptor

var file_api_TopService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x5f, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x57, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x57, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xb5, 0x03, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x21, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x70, 0x75, 0x52, 0x03,
	0x63, 0x70, 0x75, 0x12, 0x2c, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x49, 0x4f, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x4f, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x49,
	0x4f, 0x12, 0x32, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x14, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x14, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x73,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x50, 0x0a, 0x13, 0x74, 0x6f,
	0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x42, 0x79,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x13, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x3b, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x03, 0x43,
	0x70, 0x75, 0x12, 0x24, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x70, 0x75,
	0x41, 0x76, 0x67, 0x52, 0x03, 0x61, 0x76, 0x67, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x4a, 0x0a, 0x08, 0x43, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x69, 0x64, 0x6c, 0x65,
	0x22, 0x48, 0x0a, 0x06, 0x43, 0x70, 0x75, 0x41, 0x76, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x66, 0x69, 0x76, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x66, 0x74, 0x65, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x66, 0x69, 0x66, 0x74, 0x65, 0x65, 0x6e, 0x22, 0xf0, 0x01, 0x0a, 0x08, 0x44,
	0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x46, 0x0a,
	0x06, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x74, 0x70,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x62, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x6b, 0x62, 0x70, 0x73, 0x22, 0x61, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b,
	0x65, 0x72, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x12, 0x54, 0x6f, 0x70,
	0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x42, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x7d, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x40, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x32, 0x56,
	0x0a, 0x0a, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0f,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12,
	0x1b, 0x2e, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74,
	0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x54, 0x6f, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_TopService_proto_rawDescOnce sync.Once
	file_api_TopService_proto_rawDescData = file_api_TopService_proto_rawDesc
)

func file_api_TopService_proto_rawDescGZIP() []byte {
	file_api_TopService_proto_rawDescOnce.Do(func() {
		file_api_TopService_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_TopService_proto_rawDescData)
	})
	return file_api_TopService_proto_rawDescData
}

var file_api_TopService_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_TopService_proto_goTypes = []interface{}{
	(*SnapshotRequest)(nil),     // 0: topService.SnapshotRequest
	(*Snapshot)(nil),            // 1: topService.Snapshot
	(*Cpu)(nil),                 // 2: topService.Cpu
	(*CpuState)(nil),            // 3: topService.CpuState
	(*CpuAvg)(nil),              // 4: topService.CpuAvg
	(*DiskInfo)(nil),            // 5: topService.DiskInfo
	(*DiskIO)(nil),              // 6: topService.DiskIO
	(*TopTalkerByProtocol)(nil), // 7: topService.TopTalkerByProtocol
	(*TopTalkerByTraffic)(nil),  // 8: topService.TopTalkerByTraffic
	(*ConnectInfo)(nil),         // 9: topService.ConnectInfo
	(*ConnectState)(nil),        // 10: topService.ConnectState
}
var file_api_TopService_proto_depIdxs = []int32{
	2,  // 0: topService.Snapshot.cpu:type_name -> topService.Cpu
	6,  // 1: topService.Snapshot.disksIO:type_name -> topService.DiskIO
	5,  // 2: topService.Snapshot.disksInfo:type_name -> topService.DiskInfo
	7,  // 3: topService.Snapshot.topTalkersByProtocol:type_name -> topService.TopTalkerByProtocol
	8,  // 4: topService.Snapshot.topTalkersByTraffic:type_name -> topService.TopTalkerByTraffic
	9,  // 5: topService.Snapshot.connectsInfo:type_name -> topService.ConnectInfo
	10, // 6: topService.Snapshot.connectsStates:type_name -> topService.ConnectState
	4,  // 7: topService.Cpu.avg:type_name -> topService.CpuAvg
	3,  // 8: topService.Cpu.state:type_name -> topService.CpuState
	0,  // 9: topService.TopService.StreamSnapshots:input_type -> topService.SnapshotRequest
	1,  // 10: topService.TopService.StreamSnapshots:output_type -> topService.Snapshot
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_TopService_proto_init() }
func file_api_TopService_proto_init() {
	if File_api_TopService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_TopService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Snapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuAvg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskIO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopTalkerByProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopTalkerByTraffic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_TopService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_TopService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_TopService_proto_goTypes,
		DependencyIndexes: file_api_TopService_proto_depIdxs,
		MessageInfos:      file_api_TopService_proto_msgTypes,
	}.Build()
	File_api_TopService_proto = out.File
	file_api_TopService_proto_rawDesc = nil
	file_api_TopService_proto_goTypes = nil
	file_api_TopService_proto_depIdxs = nil
}
